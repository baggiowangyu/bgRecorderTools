
// bgLiveVideoSurveillanceSystem.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "bgLiveVideoSurveillanceSystem.h"
#include "bgLiveVideoSurveillanceSystemDlg.h"
#include "..\bgBase\output.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CbgLiveVideoSurveillanceSystemApp

BEGIN_MESSAGE_MAP(CbgLiveVideoSurveillanceSystemApp, CWinAppEx)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CbgLiveVideoSurveillanceSystemApp 构造

CbgLiveVideoSurveillanceSystemApp::CbgLiveVideoSurveillanceSystemApp()
{
	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
}


// 唯一的一个 CbgLiveVideoSurveillanceSystemApp 对象

CbgLiveVideoSurveillanceSystemApp theApp;


// CbgLiveVideoSurveillanceSystemApp 初始化

BOOL CbgLiveVideoSurveillanceSystemApp::InitInstance()
{
	// 准备崩溃转储信息
	TCHAR current_dir[MAX_PATH] = {0};
	TCHAR current_exe_path[MAX_PATH] = {0};
	GetModuleFileName(NULL, current_exe_path, MAX_PATH);
#ifdef UNICODE
	std::wstring tmp = current_exe_path;
	int pos = tmp.find_last_of(_T('\\'));
	if (pos < 0)
		return FALSE;

	std::wstring current_dir_stl = tmp.substr(0, pos);
	_tcscpy_s(current_dir, MAX_PATH, current_dir_stl.c_str());
#else
	std::string tmp = current_exe_path;
	int pos = tmp.find_last_of(_T('\\'));
	if (pos < 0)
		return FALSE;

	std::string current_dir_stl = tmp.substr(0, pos);
	_tcscpy_s(current_dir, MAX_PATH, current_dir_stl.c_str());
#endif

	TCHAR dump_path[MAX_PATH] = {0};
	_tcscat_s(dump_path, MAX_PATH, current_dir);
	_tcscat_s(dump_path, MAX_PATH, _T("\\dump"));
	CreateDirectory(dump_path, NULL);

	// 根据时间创建文件
	SYSTEMTIME st;
	GetLocalTime(&st);

	TCHAR dmp_name[MAX_PATH] = {0};
	_stprintf_s(dmp_name, MAX_PATH, _T("Dump-%d%02d%02d-%02d%02d%02d.dmp"), st.wYear, st.wMonth, st.wDay, st.wHour, st.wMinute, st.wSecond);

	_tcscat_s(dump_path, MAX_PATH, _T("\\"));
	_tcscat_s(dump_path, MAX_PATH, dmp_name);

	SetupMiniDumpMonitor(dump_path);

	// 如果一个运行在 Windows XP 上的应用程序清单指定要
	// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，
	//则需要 InitCommonControlsEx()。否则，将无法创建窗口。
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 将它设置为包括所有要在应用程序中使用的
	// 公共控件类。
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinAppEx::InitInstance();

	AfxEnableControlContainer();

	// 标准初始化
	// 如果未使用这些功能并希望减小
	// 最终可执行文件的大小，则应移除下列
	// 不需要的特定初始化例程
	// 更改用于存储设置的注册表项
	// TODO: 应适当修改该字符串，
	// 例如修改为公司或组织名
	SetRegistryKey(_T("网络直播视频监控平台"));

	CbgLiveVideoSurveillanceSystemDlg dlg;
	m_pMainWnd = &dlg;
	INT_PTR nResponse = dlg.DoModal();
	if (nResponse == IDOK)
	{
		// TODO: 在此放置处理何时用
		//  “确定”来关闭对话框的代码
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO: 在此放置处理何时用
		//  “取消”来关闭对话框的代码
	}

	// 由于对话框已关闭，所以将返回 FALSE 以便退出应用程序，
	//  而不是启动应用程序的消息泵。
	return FALSE;
}